"""Added country column to Country

Revision ID: 5508d78363c4
Revises: 
Create Date: 2025-06-27 13:59:00.320458

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5508d78363c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('state')
    op.drop_table('country')
    with op.batch_alter_table('countries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('country', sa.String(length=100), nullable=False))
        batch_op.drop_constraint(batch_op.f('countries_name_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['country'])
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('countries', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('countries_name_key'), ['name'], postgresql_nulls_not_distinct=False)
        batch_op.drop_column('country')

    op.create_table('country',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('country_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='country_pkey'),
    sa.UniqueConstraint('country', name='country_country_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('state',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name=op.f('state_country_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('state_pkey'))
    )
    # ### end Alembic commands ###
